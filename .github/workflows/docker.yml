name: Docker

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  docker:
    name: Push Docker image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Extract Python version
      id: get-python-version
      run: |
          echo "PYTHON_VERSION=$(grep 'PYTHON_VERSION' Makefile.env | sed 's/PYTHON_VERSION=//')" >> $GITHUB_ENV
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Retrieve repo name
      id: reponame
      run: >-
           echo "name=$(echo ${{ github.repository }} | cut -d '/' -f 2)" >>
           $GITHUB_OUTPUT
    - name: Retrieve tag
      id: tag
      run: |
        version=${GITHUB_REF/refs\/tags\//}
        if [ "$version" == "refs/heads/main" ]; then
            version='latest'
        fi
        echo "version=$version" >> $GITHUB_OUTPUT
    - name: Set up Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.reponame.outputs.name }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.reponame.outputs.name }}:latest, ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.reponame.outputs.name }}:${{ steps.tag.outputs.version }}
